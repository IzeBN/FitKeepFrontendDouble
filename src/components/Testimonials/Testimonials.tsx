import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAddAnswerMutation, AnswerType } from '@/store/quizApi';
import { tg } from '@/constants';
import toast from 'react-hot-toast';
import styles from './Testimonials.module.scss';

// –ò–º–ø–æ—Ä—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
import testimonial1 from '@/assets/testimonials/1.png';
import testimonial2 from '@/assets/testimonials/2.png';
import testimonial3 from '@/assets/testimonials/3.png';
import testimonial4 from '@/assets/testimonials/4.png';
import testimonial5 from '@/assets/testimonials/5.png';

// –î–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
const testimonialsData = [
  {
    id: 1,
    image: testimonial1,
    duration: '4 –Ω–µ–¥–µ–ª—å',
    rating: 5,
    text: '–ú–µ–Ω—è –≤—Å–µ–≥–¥–∞ –±–µ—Å–ø–æ–∫–æ–∏–ª–∏ –º–æ–∏ –¥—Ä—è–±–ª—ã–µ —Ä—É–∫–∏ –∏ –±–µ–¥—Ä–∞. –ù–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é —è –≤–ø–µ—Ä–≤—ã–µ –≤–∏–∂—É, –∫–∞–∫ —ç—Ç–∏ —É–ø—Ä—è–º—ã–µ –∑–æ–Ω—ã –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—Ç—Å—è!'
  },
  {
    id: 2,
    image: testimonial2,
    duration: '6 –Ω–µ–¥–µ–ª—å',
    rating: 5,
    text: '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã! –ó–∞ 6 –Ω–µ–¥–µ–ª—å —è –ø–æ—Ç–µ—Ä—è–ª–∞ 8 –∫–≥ –∏ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–∞–º–Ω–æ–≥–æ —É–≤–µ—Ä–µ–Ω–Ω–µ–µ. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å—Ç–∞–ª–æ –º–æ–∏–º –ª—É—á—à–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º.'
  },
  {
    id: 3,
    image: testimonial3,
    duration: '8 –Ω–µ–¥–µ–ª—å',
    rating: 5,
    text: '–Ø –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –¥—É–º–∞–ª–∞, —á—Ç–æ —Å–º–æ–≥—É —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ —Å–µ–±—è –≤ —Ñ–æ—Ä–º—É. –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å—Ç–∞–ª–∏ —á–∞—Å—Ç—å—é –º–æ–µ–π –∂–∏–∑–Ω–∏, –∏ —è –ª—é–±–ª—é –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É!'
  },
  {
    id: 4,
    image: testimonial4,
    duration: '3 –Ω–µ–¥–µ–ª—å',
    rating: 5,
    text: '–ü–æ—Ç—Ä—è—Å–∞—é—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! –£–∂–µ —á–µ—Ä–µ–∑ 3 –Ω–µ–¥–µ–ª–∏ —è –∑–∞–º–µ—Ç–∏–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–≤–æ–µ–º —Ç–µ–ª–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º, –∫—Ç–æ —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å.'
  },
  {
    id: 5,
    image: testimonial5,
    duration: '5 –Ω–µ–¥–µ–ª—å',
    rating: 5,
    text: '–õ—É—á—à–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ñ–∏—Ç–Ω–µ—Å–∞! –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è –ø–æ–º–æ–≥–ª–∏ –º–Ω–µ –¥–æ—Å—Ç–∏—á—å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'
  }
];

interface TestimonialsProps {
  onHide: () => void;
}

export const Testimonials: React.FC<TestimonialsProps> = ({ onHide }) => {
  const navigate = useNavigate();
  const [currentTestimonial, setCurrentTestimonial] = useState(0);
  const [touchStart, setTouchStart] = useState<number | null>(null);
  const [touchEnd, setTouchEnd] = useState<number | null>(null);
  const [quizAnswer] = useAddAnswerMutation();

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentTestimonial((prev) => (prev + 1) % testimonialsData.length);
    }, 5000);

    return () => clearInterval(interval);
  }, []);

  const handleNext = async () => {
    if (!tg?.initData) {
      toast.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
      return;
    }

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /quiz/answer/add
      await quizAnswer({
        init: tg.initData,
        question_id: 2001,
        answer: 'next',
        answer_type: AnswerType.ONE_BUTTON
      }).unwrap();

      onHide(); // –°–∫—Ä—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤—ã
      navigate('/trains');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞:', error);
      toast.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞');
    }
  };

  const handleDotClick = (index: number) => {
    setCurrentTestimonial(index);
  };

  const handlePrevious = () => {
    setCurrentTestimonial((prev) => 
      prev === 0 ? testimonialsData.length - 1 : prev - 1
    );
  };

  const handleNextTestimonial = () => {
    setCurrentTestimonial((prev) => (prev + 1) % testimonialsData.length);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–æ–≤
  const handleTouchStart = (e: React.TouchEvent) => {
    setTouchEnd(null);
    setTouchStart(e.targetTouches[0].clientX);
  };

  const handleTouchMove = (e: React.TouchEvent) => {
    setTouchEnd(e.targetTouches[0].clientX);
  };

  const handleTouchEnd = () => {
    if (!touchStart || !touchEnd) return;
    
    const distance = touchStart - touchEnd;
    const isLeftSwipe = distance > 50;
    const isRightSwipe = distance < -50;

    if (isLeftSwipe) {
      handleNextTestimonial();
    }
    if (isRightSwipe) {
      handlePrevious();
    }
  };

  const currentData = testimonialsData[currentTestimonial];

  return (
    <div className={styles.container}>
      {/* Header */}
      <div className={styles.header}>
        <div className={styles.timeAndUser}>
          <span className={styles.time}>23:26</span>
          <div className={styles.userIcon}>üë§</div>
        </div>
        <div className={styles.statusBar}>
          <div className={styles.signal}>üì∂</div>
          <div className={styles.wifi}>üì∂</div>
          <div className={styles.battery}>
            <span>11</span>
            <div className={styles.batteryIcon}>üîã</div>
          </div>
        </div>
      </div>

      {/* Back Arrow */}
      <div className={styles.backArrow}>
        <button className={styles.backButton}>‚Üê</button>
      </div>

      {/* Title */}
      <h1 className={styles.title}>
        –û–°–¢–ê–í–ê–ô–¢–ï–°–¨ –ú–û–¢–ò–í–ò–†–û–í–ê–ù–ù–´–ú–ò –ë–õ–ê–ì–û–î–ê–†–Ø –ò–°–¢–û–†–ò–Ø–ú –£–°–ü–ï–•–ê
      </h1>

      {/* Testimonial Card with Swipe Support */}
      <div 
        className={styles.testimonialCard}
        onTouchStart={handleTouchStart}
        onTouchMove={handleTouchMove}
        onTouchEnd={handleTouchEnd}
      >
        <div className={styles.imageContainer}>
          <img 
            src={currentData.image} 
            alt={`–û—Ç–∑—ã–≤ ${currentData.id}`}
            className={styles.testimonialImage}
          />
          
          {/* Navigation Arrows - positioned over the image */}
          <button 
            className={styles.navButton} 
            onClick={handlePrevious}
            style={{ left: '10px' }}
          >
            ‚Äπ
          </button>
          <button 
            className={styles.navButton} 
            onClick={handleNextTestimonial}
            style={{ right: '10px' }}
          >
            ‚Ä∫
          </button>
        </div>
        
        <p className={styles.testimonialText}>
          {currentData.text}
        </p>
      </div>

      {/* Pagination Dots */}
      <div className={styles.pagination}>
        {testimonialsData.map((_, index) => (
          <button
            key={index}
            className={`${styles.dot} ${index === currentTestimonial ? styles.activeDot : ''}`}
            onClick={() => handleDotClick(index)}
          />
        ))}
      </div>

      {/* Next Button */}
      <button className={styles.nextButton} onClick={handleNext}>
        –°–õ–ï–î–£–Æ–©–ò–ï
      </button>
    </div>
  );
};
